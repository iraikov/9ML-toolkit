<?xml version='1.0' encoding='UTF-8'?>
<NineML xmlns="http://nineml.incf.org/9ML/0.3"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://nineml.incf.org/9ML/0.3 ../NineML_v0.3.xsd"
    name="Brunel (2000) Model A Network">

  <Property name="order"><!-- Scales the size of the network (total 5*order neurons) -->
    <Quantity><SingleValue>2500</SingleValue></Quantity>
  </Property>

  <Property name="Ne"><!-- Number of excitatory neurons -->
    <Quantity><SingleValue><MathInline>4 * order</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="Ni"><!-- Number of inhibitory neurons -->
    <Quantity><SingleValue><MathInline>1 * order</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="epsilon"><!-- Connectivity probability -->
    <Quantity><SingleValue>0.1</SingleValue></Quantity>
  </Property>

  <Property name="Ce"><!-- Total number of excitatory synapses -->
    <Quantity><SingleValue><MathInline>epsilon * Ne</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="Ci"><!-- Total number of inhibitory synapses -->
    <Quantity><SingleValue><MathInline>epsilon * Ni</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="Cext"><!-- Total number of external synapses -->
    <Quantity><SingleValue><MathInline>Ce</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="delay" unit="ms"><!-- Global delay for all neurons in the group -->
    <Quantity><SingleValue>1.5</SingleValue></Quantity>
  </Property>

  <Property name="J" unit="mV"> <!-- Synaptic weight -->
    <Quantity><SingleValue>0.1</SingleValue></Quantity>
  </Property>

  <Property name="g"> <!-- Relative strength of inhibitory synapses -->
    <Quantity><SingleValue>4.5</SingleValue></Quantity>
  </Property>

  <Property name="eta"> <!-- nu_ext / nu_thr -->
    <Quantity><SingleValue>0.9</SingleValue></Quantity>
  </Property>

  <Property name="Je"> <!-- Excitatory weights -->
    <Quantity><SingleValue><MathInline>J</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="Ji"> <!-- Inhibitory weights -->
    <Quantity><SingleValue><MathInline>-g * Je</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="Jext"> <!-- External weights -->
    <Quantity><SingleValue><MathInline>Je</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="theta" unit="mV"> <!-- Firing threshold -->
    <Quantity><SingleValue>20.0</SingleValue></Quantity>
  </Property>

  <Property name="tau" unit="ms"> <!-- Membrane time constant -->
    <Quantity><SingleValue>20.0</SingleValue></Quantity>
  </Property>

  <Property name="nu_thresh"> <!-- Threshold rate -->
    <Quantity><SingleValue><MathInline>theta / (Je * Ce * tau)</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="nu_ext"> <!-- External rate per synapse --> 
    <Quantity><SingleValue><MathInline>eta * nu_thresh</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="input_rate" unit="Hz"> <!-- Mean input spiking rate -->
    <Quantity><SingleValue><MathInline>1000.0 * nu_ext</MathInline></SingleValue></Quantity>
  </Property>

  <Property name="timestep">
    <Quantity><SingleValue>0.2</SingleValue></Quantity>
  </Property>

  <Component name="E">

    <Definition url="BrunelIaF.xml">BrunelIaF</Definition>

    <Property name="tau">
      <Quantity><SingleValue>20.0</SingleValue></Quantity>
    </Property>

    <Property name="tau_rp">
      <Quantity><SingleValue>2.0</SingleValue></Quantity>
    </Property>

    <Property name="Vreset">
      <Quantity><SingleValue>10.0</SingleValue></Quantity>
    </Property>

    <Property name="R">
      <Quantity><SingleValue>100.0</SingleValue></Quantity>
    </Property>

    <Initial name="Isyn">
      <Quantity><SingleValue>0.0</SingleValue></Quantity>
    </Initial>

    <Initial name="V">
      <Quantity><SingleValue><MathInline> random.uniform ()</MathInline></SingleValue></Quantity>
    </Initial>

    <Initial name="t_rpend">
      <Quantity><SingleValue>0.0</SingleValue></Quantity>
    </Initial>

    <Initial name="spikeOutput">
      <Quantity><SingleValue>-1.0</SingleValue></Quantity>
    </Initial>

    <Initial name="refractoryEnd">
      <Quantity><SingleValue>-1.0</SingleValue></Quantity>
    </Initial>

    <Field name="theta">
      <Quantity><SingleValue><MathInline>theta + random.normal ()</MathInline></SingleValue></Quantity>
    </Field>

  </Component>

  <Component name="I">

    <Definition url="BrunelIaF.xml">BrunelIaF</Definition>

    <Property name="tau">
      <Quantity><SingleValue>20.0</SingleValue></Quantity>
    </Property>

    <Property name="tau_rp">
      <Quantity><SingleValue>2.0</SingleValue></Quantity>
    </Property>

    <Property name="Vreset">
      <Quantity><SingleValue>10.0</SingleValue></Quantity>
    </Property>

    <Property name="R">
      <Quantity><SingleValue>100.0</SingleValue></Quantity>
    </Property>

    <Initial name="Isyn">
      <Quantity><SingleValue>0.0</SingleValue></Quantity>
    </Initial>

    <Initial name="V">
      <Quantity><SingleValue><MathInline> random.uniform ()</MathInline></SingleValue></Quantity>
    </Initial>

    <Initial name="t_rpend">
      <Quantity><SingleValue>0.0</SingleValue></Quantity>
    </Initial>

    <Initial name="spikeOutput">
      <Quantity><SingleValue>-1.0</SingleValue></Quantity>
    </Initial>

    <Initial name="spikeOutput">
      <Quantity><SingleValue>-1.0</SingleValue></Quantity>
    </Initial>

    <Initial name="refractoryEnd">
      <Quantity><SingleValue>-1.0</SingleValue></Quantity>
    </Initial>

    <Field name="theta">
      <Quantity><SingleValue><MathInline>theta + random.normal ()</MathInline></SingleValue></Quantity>
    </Field>
      
  </Component>

  <Component name="Ext">

    <Definition url="Poisson.xml">Poisson</Definition>
    
    <Property name="rate">
      <Quantity><SingleValue><MathInline>input_rate</MathInline></SingleValue></Quantity>
    </Property>

    <Initial name="t_next">
      <Quantity><SingleValue>0.0</SingleValue></Quantity>
    </Initial>

    <Initial name="spikeOutput">
      <Quantity><SingleValue>-1.0</SingleValue></Quantity>
    </Initial>
      
  </Component>


  <Component name="ExternalPlasticity">
    
    <Definition url="ConstantPlasticity.xml">ConstantPlasticity</Definition>
    
    <Initial name="weight">
      <Quantity><SingleValue><MathInline>Jext</MathInline></SingleValue></Quantity>
    </Initial>
      
  </Component>

  <Component name="ExcitatoryPlasticity">
    
    <Definition url="ConstantPlasticity.xml">ConstantPlasticity</Definition>
    
    <Initial name="weight">
      <Quantity><SingleValue><MathInline>Je</MathInline></SingleValue></Quantity>
    </Initial>
      
  </Component>

  <Component name="InhibitoryPlasticity">
    
    <Definition url="ConstantPlasticity.xml">ConstantPlasticity</Definition>
    
    <Initial name="weight">
      <Quantity><SingleValue><MathInline>Ji</MathInline></SingleValue></Quantity>
    </Initial>
      
  </Component>


  <Component name="RandomUniform">
    
    <Definition url="RandomUniformConnection.xml">RandomUniformConnection</Definition>
    
    <Initial name="epsilon">
      <Quantity><SingleValue><MathInline>epsilon</MathInline></SingleValue></Quantity>
    </Initial>

  </Component>


  <Group name="BrunelCaseD">

    <Population name="Exc"> <!-- Excitatory population definition -->  
      <Cell><Reference>E</Reference></Cell>
      <Number><Quantity><SingleValue><MathInline>Ne</MathInline></SingleValue></Quantity></Number>
    </Population>

    <Population name="Inh"> <!-- Inhibitory population definition -->  
      <Cell><Reference>I</Reference></Cell>
      <Number><Quantity><SingleValue><MathInline>Ni</MathInline></SingleValue></Quantity></Number>
    </Population>

    <Population name="Ext"> <!-- External sources definition -->  
      <Cell><Reference>Ext</Reference></Cell>
      <Number><Quantity><SingleValue><MathInline>Cext</MathInline></SingleValue></Quantity></Number>
    </Population>

    <Selection name="All neurons"> <!-- The set of all neurons -->  
      <Union>
        <Left><Item>Exc</Item></Left> 
        <Right><Item>Inh</Item></Right>
      </Union>
    </Selection>

    <!-- Projection from external sources to all neurons -->  
    <Projection name="External" 
                input_event_port="spike" 
                input_analog_port="Isyn"
                output_event_port="spikeOutput"
                input_response_port="Ispike"> 
      <source><Reference>Ext</Reference></source>
      <target><Reference>All neurons</Reference></target>
      <rule operator="all-to-all"/>
      <Delay><Quantity><SingleValue><MathInline>delay</MathInline></SingleValue></Quantity></Delay>
      <plasticity><Reference>ExternalPlasticity</Reference></plasticity>
    </Projection>

    <!-- Projection from excitatory neurons to all neurons -->  
    <Projection name="Excitation" 
                input_event_port="spike" 
                input_analog_port="Isyn"
                output_event_port="spikeOutput"
                input_response_port="Ispike"> 
      <source><Reference>Exc</Reference></source>
      <target><Reference>All neurons</Reference></target>
      <rule operator="for-each">
        <Reference>RandomUniform</Reference>
        <state>connection</state>
      </rule>
      <Delay><Quantity><SingleValue><MathInline>delay</MathInline></SingleValue></Quantity></Delay>
      <plasticity><Reference>ExcitatoryPlasticity</Reference></plasticity>
    </Projection>

    <!-- Projection from inhibitory neurons to all neurons -->  
    <Projection name="Inhibition" 
                input_event_port="spike" 
                input_analog_port="Isyn"
                output_event_port="spikeOutput"
                input_response_port="Ispike"> 
      <source><Reference>Inh</Reference></source>
      <target><Reference>All neurons</Reference></target>
      <rule operator="for-each">
        <Reference>RandomUniform</Reference>
        <state>connection</state>
      </rule>
      <Delay><Quantity><SingleValue><MathInline>delay</MathInline></SingleValue></Quantity></Delay>
      <plasticity><Reference>InhibitoryPlasticity</Reference></plasticity>
    </Projection>

    <!-- Record spikes from the given set -->
    <SpikeRecording set="All neurons"/>

  </Group>

</NineML>
